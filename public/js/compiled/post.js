const mtgTooltip=function(e){arguments.length&&(this._settings=Object.assign({},this._settings,e)),this._settings.log&&console.log("mtgtooltip loaded"),this._settings.start&&this.start()};mtgTooltip.prototype={start:function(){if(this._settings.mobile&&window.innerWidth<=600&&window.innerHeight<=500)return void(this._settings.log&&console.log("Possible Mobile mode detected, exiting..."));this._alltogether(),this._settings.log&&console.log("mtgtooltip started");const e=this._settings.myclass,t=document.querySelector(this._settings.element);this.mymousemove(t);const s=t.querySelectorAll("."+e+":not(."+e+"mtgloaded)");this._settings.log&&console.log("found cards to create tooltip: ",s.length),s.forEach(e=>{e.style.cursor="pointer";let t=e.dataset.name,s=e.dataset.set,n=e.dataset.multiverseid,o=e.dataset.specialimg,i=e.innerHTML,a="https://gatherer.wizards.com/Handlers/Image.ashx?type=card",l="",d="",p="";if(!n&&!o){l=void 0!==t&&t.length>0?"&name="+encodeURI(t):"&name="+encodeURI(i),void 0!==s&&s.length>0&&(d="&set="+s);const e=void 0!==t&&t.length>0?this.getSetLands(t):this.getSetLands(i);e&&(d="&set="+e)}void 0!==n&&n.length>0&&(p="&multiverseid="+n),void 0!==o&&o.length>0&&(a=this._settings.specialImage+o),a+=l+d+p,this.run(e,a)}),this._settings.log&&console.log("Created cards tooltips divs, starting creating the tooltips pairs")},run:function(e,t){const s=this._settings.myclass;let n=this._settings.id;const o=document.querySelector(this._settings.element);e.id=s+"_p"+n;let i=document.createElement("span");i.classList.add(s+"hover"),i.id=s+"_c"+n;let a="src";this._settings.lazyload&&(a="data-src");const l=this._settings.wrap_in,d=this._settings.wrap_out;i.innerHTML=`${l}<img ${a}='${t}' alt='mtgtooltip image' >${d}`,e.dataset.tooltipid=n,i.dataset.tooltipid=n,e.style.whiteSpace="nowrap",o.appendChild(i),i.style.display="none",i.style.opacity="0",i.classList.add(s+"tooltipstarted"),this._settings.id=n+1;let p=this;e.addEventListener("mouseover",function(e){p.mouseenter(e)}),e.addEventListener("mouseleave",function(e){p.mouseleave(e)})},mouseleave:function(e){let t=e.target.dataset.tooltipid;const s=this._settings.myclass,n=document.getElementById(s+"_c"+t);if(this._settings.log&&console.log("Mouse leave: ",e),this._settings.fadetime>0){let e=this._settings.fadetime;n.style.transition="all "+e+"ms ease-out",n.style.opacity=0,setTimeout(()=>{n.style.display="none",n.style.transition=""},e)}else n.style.display="none"},mouseenter:function(e){let t=e.target.dataset.tooltipid;const s=this._settings.myclass,n=document.getElementById(s+"_c"+t);if(this._settings.lazyload){const e=n.querySelector("img"),t=e.dataset.src;e.setAttribute("src",t)}n.style.position="absolute",n.style.opacity=this._settings.opacity,n.style.display="inline-block";let o=e.pageY,i=e.pageX,a=window.innerWidth,l=window.innerHeight,d=window.scrollY,p=window.scrollX,r=0,c=0;c=i+25,i+258>a+p&&(c=p+a-258),(r=o+25)+346>l+d&&(r=o-346),n.style.left=c+"px",n.style.top=r+"px"},mymousemove:function(e){const t=this;e.addEventListener("mousemove",function(e){t._settings.mousex=e.pageX,t._settings.mousey=e.pageY})},kill:function(){myclass=this._settings.myclass,document.querySelector(this._settings.element).querySelectorAll("."+myclass).forEach(e=>{e.removeEventListener("mouseover",function(e){that.mouseenter(e)}),e.removeEventListener("mouseleave",function(e){that.mouseleave(e)}),e.classList.remove(myclass),e.classList.remove("mtgloaded");let t=e.dataset.tooltipid;const s=document.getElementById(myclass+"_c"+t);s.parentNode.removeChild(s),e.removeAttribute("data-tooltipid"),e.removeAttribute("id")}),this._settings.log&&console.log(this._settings.name,"removed all instances of mtgtooltips")},_settings:{name:"MTG Tooltip js",version:"1.0",element:"body",myclass:"mtgtooltip",lazyload:!0,fadetime:300,opacity:1,mousex:0,mousey:0,id:0,log:!1,start:!0,wrap_in:"",wrap_out:"",specialImage:"",mobile:!0,basiclands:"ust",shocklands:"exp",fetchlands:"exp",painlands:"exp"},getSetLands:function(e){const t=e.toLowerCase();if(this._lands[t]){const e=this._lands[t].type.toLowerCase(),s=this._settings[e].toLowerCase(),n=this._lands[t][s];if(s&&n)return n.toUpperCase();{let s="";Object.values(this._lands[t]).forEach(t=>{t!=e&&(s+=t+" ")})}}return null},_shocklands:[{"blood crypt":{type:"shocklands",old:"dis",new:"rtr",exp:"exp"}},{"breeding pool":{type:"shocklands",old:"dis",new:"gtc",exp:"exp"}},{"godless shrine":{type:"shocklands",old:"gpt",new:"gtc",exp:"exp"}},{"hallowed fountain":{type:"shocklands",old:"dis",new:"rtr",exp:"exp"}},{"overgrown tomb":{type:"shocklands",old:"rav",new:"rtr",exp:"exp"}},{"sacred foundry":{type:"shocklands",old:"rav",new:"gtc",exp:"exp"}},{"steam vents":{type:"shocklands",old:"gpt",new:"rtr",exp:"exp"}},{"stomping ground":{type:"shocklands",old:"gpt",new:"gtc",exp:"exp"}},{"temple garden":{type:"shocklands",old:"rav",new:"rtr",exp:"exp"}},{"watery grave":{type:"shocklands",old:"rav",new:"gtc",exp:"exp"}}],_fetchlands:[{"arid mesa":{type:"fetchlands",old:"zen",new:"mm3",exp:"exp"}},{"bloodstained mire":{type:"fetchlands",old:"ons",new:"ktk",exp:"exp"}},{"flooded strand":{type:"fetchlands",old:"ons",new:"ktk",exp:"exp"}},{"marsh flats":{type:"fetchlands",old:"zen",new:"mm3",exp:"exp"}},{"misty rainforest":{type:"fetchlands",old:"zen",new:"mm3",exp:"exp"}},{"polluted delta":{type:"fetchlands",old:"ons",new:"ktk",exp:"exp"}},{"scalding tarn":{type:"fetchlands",old:"zen",new:"mm3",exp:"exp"}},{"verdant catacombs":{type:"fetchlands",old:"zen",new:"mm3",exp:"exp"}},{"windswept heath":{type:"fetchlands",old:"ons",new:"ktk",exp:"exp"}},{"wooded foothills":{type:"fetchlands",old:"ons",new:"ktk",exp:"exp"}}],_painlands:[{"adarkar wastes":{type:"painlands",old:"ie",new:"10e",exp:"6e"}},{"battlefield forge":{type:"painlands",old:"ap",new:"ori",exp:"10e"}},{brushland:{type:"painlands",old:"ie",new:"10e",exp:"6e"}},{"caves of koilos":{type:"painlands",old:"ap",new:"ori",exp:"10e"}},{"karplusan forest":{type:"painlands",old:"ap",new:"ori",exp:"10e"}},{"llanowar wastes":{type:"painlands",old:"ap",new:"ori",exp:"10e"}},{"shivan reef":{type:"painlands",old:"ap",new:"ori",exp:"10e"}},{"yavimaya coast":{type:"painlands",old:"ap",new:"ori",exp:"10e"}},{"underground river":{type:"painlands",old:"ap",new:"ori",exp:"10e"}},{"sulfurous springs":{type:"painlands",old:"ap",new:"ori",exp:"10e"}}],_basiclands:[{mountain:{type:"basiclands",uhn:"unh",ust:"ust",ugl:"ug"}},{plains:{type:"basiclands",uhn:"unh",ust:"ust",ugl:"ug"}},{forest:{type:"basiclands",uhn:"unh",ust:"ust",ugl:"ug"}},{swamp:{type:"basiclands",uhn:"unh",ust:"ust",ugl:"ug"}},{island:{type:"basiclands",uhn:"unh",ust:"ust",ugl:"ug"}}],_alltogether:function(){[this._shocklands,this._fetchlands,this._painlands,this._basiclands].forEach(e=>{e.forEach((t,s)=>{Object.assign(this._lands,e[s])})})},_lands:{}};
